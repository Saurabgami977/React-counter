{"version":3,"sources":["components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","ButtonComp","props","classes","color","className","Button","variant","style","backgroundColor","onClick","click","value","App","useState","number","setnumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAIMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF,QAAS,CACLC,OAAQF,EAAMG,QAAQ,SAKnB,SAASC,EAAWC,GAC/B,IAAMC,EAAUR,IACEO,EAAME,MACxB,OACI,qBAAKC,UAAWF,EAAQL,KAAxB,SACI,cAACQ,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAO,CAAEC,gBAAiBP,EAAME,MAAOA,MAAO,SAC9CM,QAASR,EAAMS,MAHnB,SAIKT,EAAMU,UCQRC,MAzBf,WAAgB,IAAD,EAEaC,mBAAS,GAFtB,mBAERC,EAFQ,KAEAC,EAFA,KAeb,OACE,sBAAKX,UAAU,MAAf,UACE,cAACJ,EAAD,CAAYW,MAAM,WAAWR,MAAM,OAAOO,MAb7B,WACfK,EAAUD,EAAS,MAajB,cAACd,EAAD,CAAYW,MAAM,WAAWR,MAAM,SAASO,MAV/B,WACfK,EAAUD,EAAS,MAUjB,cAACd,EAAD,CAAYW,MAAM,QAAQR,MAAM,QAAQO,MAP9B,WACZK,EAAU,MAOR,6BAAKD,QCZIE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.72888c0f.chunk.js","sourcesContent":["import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    }\r\n}));\r\n\r\nexport default function ButtonComp(props) {\r\n    const classes = useStyles();\r\n    const propColor = props.color\r\n    return (\r\n        <div className={classes.root}>\r\n            <Button\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: props.color, color: 'white' }}\r\n                onClick={props.click}>\r\n                {props.value}\r\n            </Button>\r\n        </div >\r\n    )\r\n}\r\n","import './App.css';\nimport React, { useState } from 'react';\nimport ButtonComp from './components/Button';\n\nfunction App() {\n\n  let [number, setnumber] = useState(0)\n\n  const increase = () => {\n    setnumber(number + 1)\n  }\n\n  const decrease = () => {\n    setnumber(number - 1)\n  }\n\n  const reset = () => {\n    setnumber(0)\n  }\n  return (\n    <div className=\"App\">\n      <ButtonComp value=\"Increase\" color='blue' click={increase} />\n      <ButtonComp value=\"Decrease\" color='tomato' click={decrease} />\n      <ButtonComp value=\"Reset\" color='black' click={reset} />\n      <h1>{number}</h1>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}